{{
Infobox Modul
|ModPurpose=Das Modul wurde entworfen um den gesamten Heim-/Hausstatus in einem Gerät abzubilden und viele grundlegende Automationen durch Hinzufügen weiterer Geräte bereitzustellen
|ModType=h
|ModCmdRef=HOMEMODE
|ModFTopic=64317
|ModForumArea=Automatisierung
|ModTechName=22_HOMEMODE.pm
|ModOwner=DeeSPe
}}
Diese Seite beschreibt die Konfiguration und Verwendung des Moduls ''22_HOMEMODE.pm''. 

=Allgemeines=
Das Modul ''22_HOMEMODE.pm'' wurde entworfen um den gesamten Heim-/Hausstatus in einem Gerät abzubilden.

Viele allgemein typische Automationen sind bereits fertig integriert.

Die jeweils per Event auszuführenden Befehle können in den entsprechenden ''HomeCMD...'' Atributen hinterlegt werden und so in der Detail Ansicht des HOMEMODE Geräts übersichtlich angezeigt und bearbeitet werden.

Das Anlegen vieler notify/DOIF ist durch den Einsatz von ''HOMEMODE'' unnötig.

Zusätzlich wurde das Modul für die Verwendung mit HomeKit als GUI optimiert. Alle möglichen Mappings für Homebridge sind bereits enthalten und können über einen set Befehl aktualisiert werden.

==Voraussetzungen==
Um Modul ''22_HOMEMODE.pm'' benutzen zu können benötigt man als Mindestvoraussetzung ein bereits angelegtes RESIDENTS Gerät mit entsprechenden ROOMMATE/GUEST Geräten.

==Mögliche Automationen==
Alle Automationen sind optional.

Hier ein paar Beispiele:
*Änderung des Zustands von ROOMMATE/GUEST Geräten anhand von PRESENCE Geräten
*Bereistellung von CMD Attributen für mögliche Events rund um den Heim-/Hausstatus
*Bereistellung von Platzhaltern innerhalb der CMD Attribute, z.B. %MODE%, %SEASON% oder %PREVMODE% für die Werte der Readings mode, season und prevMode
*Einbindung von Kontakt Sensoren, für z.B. Offen-Warnungen nach bestimmten Zeitraum oder Alarm Meldungen in bestimmten Alarm Modus - kann pro Kontakt Sensor konfiguriert werden
*Einbindung von Bewegungs Sensoren, für z.B. automatische Licht Schaltungen oder Alarm Meldungen in bestimmten Alarm Modus - kann pro Bewegungs Sensor konfiguriert werden
*Darstellungen und Auslösen von Sabotage Alarmen der eingebundenen Kontakt- und Bewegungssensoren
*Einbindung von jeweils einem Temperatur und Luftfeuchtigkeitssensor
*Einbindung eines lokalen Yahoo Wetter Devices zur Ermittlung und Ausgabe der lokalen Wetterdaten und Erzeugung der Wettervorhersage
*Einbindung von Power und Energy Sensoren zur Ermittlung der Gesamtmengen
*Einbindung von holiday Devices für spezielle im HOMEMODE Device verfügbar zu machende Events
*von Uhrzeit abhängiger Anwesend-Modus
*Bewohner unabhängige Tageszeit-Modus
*Alarm-Modus
*DND-Modus
*Überwachung von Batteriewerten

=HOMEMODE-Gerät=
==Definition==
Das HOMEMODE Gerät - hier mit dem Namen ''Home'' versehen - selbst wird über
 define Home HOMEMODE
bei Vorhandensein nur eines RESIDENTS Geräts definiert.

Bei Verwendung mehrerer RESIDENTS Geräte muss das Master RESIDENTS Gerät beim Definieren mit angegeben werden
 define Home HOMEMODE rgr_Residents
Dieses Modul verwendet das globale Attribut ''language'' zur Bestimmung der Anzeigedaten (Standard: EN=english). Für deutsche Ausgabedaten kann das Attribut
 attr global language DE
gesetzt werden.<br>
Alternativ kann auch nur das HOMEMODE Gerät auf deutsch geändert werden
 attr Home HomeLanguage DE

==Set-Befehle==
''set <required> [optional]''

 set Home anyoneElseAtHome <on/off>
einschalten wenn jemand anderes zu Hause ist der kein registrierter ROOMMATE/GUEST ist, z.B. Hund/Katze oder unregistrierte Gäste<br>
wenn eingeschaltet, dann wird der Alarm Mode beim Verlassen statt auf armaway nur auf armhome gestellt<br>
schaltet man ein und hat schon Haus/Wohnung verlassen, so wird der Alarm Mode von armaway auf armhome gestellt<br>
Platzhalter %AEAH% in allen HomeCMD Attributen verfügbar

 set Home dnd <on/off>
schaltet den "Bitte nicht stören" Modus ein<br>
z.B. um Benachrichtigungen zu deaktivieren<br>
Platzhalter %DND% in allen HomeCMD Attributen verfügbar

 set Home dnd-for-minutes <MINUTES>
schaltet den "Bitte nicht stören" Modus für die angegebenen Minuten ein<br>
kehrt danach zum vorherigen (tageszeitabhängigen) Modus zurück

 set Home location <arrival/home/bed/underway/wayhome>
manueller Ortswechsel<br>
Platzhalter %LOCATION% in allen HomeCMD Attributen verfügbar

 set Home mode <morning/day/afternoon/evening/night/gotosleep/asleep/absent/gone/home>
manueller Moduswechsel<br>
Platzhalter %MODE% in allen HomeCMD Attributen verfügbar

 set Home modeAlarm <armaway/armhome/armnight/disarm>
schaltet den angegebenen Alarm Modus ein<br>
Platzhalter %AMODE% in allen HomeCMD Attributen verfügbar

 set Home modeAlarm-for-minutes <armaway/armhome/armnight/disarm> <MINUTES>
schaltet den angegebenen Alarm Modus für die angegebenen Minuten ein
kehrt danach zum vorherigen Alarm Modus zurück

 set Home updateHomebridgeMapping
aktualisiert das Attribut homebridgeMapping des HOMEMODDE Device abhängig von den verfügbaren Informationen

 set Home updateInternalForce
führt eine Aktualisierung der Internals des HOMEMODE Device aus<br>
das sollte manuell benutzt werden nachdem das Modul aktualisiert und nur ein reload statt restart gemacht wurde<br>
auch wenn man überwachte/kontrollierte Geräte ändert sollte man diesen Befehl manuell ausführen, z.B. neue ROOMMATE/GUEST im RESIDENTS Device hinzufügt, oder Geräte in FHEM hinzufügt die dem selben Devspec wie bisher entsprechen (Steckdosen, Sensoren)

==Get-Befehle==
''get <required> [optional]''

 get Home contactsOpen <all/doorsinside/doorsoutside/doorsmain/outside/windows>
Liste von all/doorsinside/doorsoutside/doorsmain/outside/windows offenen Kontakten<br>
Platzhalter %OPEN% (contactsOutsideOpen) und %OPENCT% (contactsOutsideOpen_ct) sind in allen HomeCMD Attributen verfügbar

 get Home publicIP
holen der öffentlichen IP Adresse<br>
Platzhalter %IP% ist in allen HomeCMD Attributen verfügbar

 get Home sensorsTampered
Liste aller sabotierten Sensoren<br>
Platzhalter %TAMPERED% in allen HomeCMD Attributen verfügbar

 get Home weather <long/short>
Wetterinfo im angegebenen Format<br>
Platzhalter %WEATHER% und %WEATHERLONG% sind in allen HomeCMD Attributen verfügbar

 get Home weatherForecast [TAG]
Wettervorhersage für angegebenen Tag<br>
wenn kein Tag angegeben wird, so wird die Vorhersage für morgen (2) asugegeben<br>
Platzhalter %FORECAST% (morgen) und %FORECASTTODAY% (heute) sind in allen HomeCMD Attributen verfügbar

==webCmd==
Die Schaltmöglichkeiten sind absichtlich gering gehalten, denn im normalen Betrieb sollte nicht mehr benötigt werden als die hier gebotenen.<br>
Es lässt sich der Alarm Mode manuell umschalten und beim Klick auf das devStateIcon wird der DND Mode an- und ausgeschaltet.

=Konfiguration=

==Grundkonfiguration==

Diese Grundkonfiguration sollte immer als erstes erfolgen um entsprechend darauf weiter aufzubauen. Als zweiter Schritt ist dann die erweiterte Konfiguration angedacht.

Bei der Namensvergabe der Attribute vom HOMEMODE Device wurde nach einem möglichst kurzem Prefix gesucht und nach vielen Tests wurde sich für das Prefix "Home" entschieden. Das hat den Vorteil dass alle Attribute beisammen stehen und diese auch (durch den Großbuchstaben am Anfang) ziemlich weit oben in der Liste der Attribute stehen. Ebenso wurde bei der Namensvergabe versucht selbsterklärende Namen zu wählen, das hat den Vorteil dass man relativ einfach genau erkennen kann wofür das Attribut steht, allerdings auch den Nachteil dass einige Attributnamen ganz schön lang werden.

===Attribute===

====HomeAdvancedUserAttr====
Als Erstes wird empfohlen, gerade für Anfänger, das Attribut "HomeAdvancedUserAttr" auf 1 zu setzen. Dadurch werden viel mehr HomeCMD Attribute freigeschaltet. Diese werden im Attribut userattr des HOMEMODE Device hinzugefügt.<br>
Standardwert: 0

====HomeAutoAlarmModes====
Als nächstes sollte man sich entscheiden ob die Alarm Modus evtl. nicht automatisch zum jeweiligen Modus des HOMEMODE Device geschaltet werden sollen. Standardmäßig werden die Alarm Modus automatisch gesteuert. Ist das nicht erwünscht, so ist der Wert dieses Attributs auf 0 zu setzen.<br>
Bei Modus "absent" des HOMEMODE Device wird automatisch auf "armaway" geschaltet.<br>
Bei Modus "home" des HOMEMODE Device wird automatisch auf "disarm" geschaltet.<br>
Bei Modus "asleep" des HOMEMODE Device wird automatisch auf "armnight" geschaltet.<br>
Alarm Modus "armhome" kann nur manuell gesetzt werden.<br>
Werte: 0 oder 1<br>
Standardwert: 1

====HomeAutoArrival====
Ist hier ein Wert größer 0 angegeben, so wird bei Ankunft jedes ROOMMATE/GUEST die location des jeweiligen ROOMMATE/GUEST für die hier angegeben Zeit in Minuten auf "arrival" gesetzt. Beim ersten nach Hause kommenden ROOMMATE/GUEST wird zusätzlich die location des HOMEMODE Device für die hier eingestellte Zeit in Minuten auf "arrival" gesetzt.<br>
Nach Ablauf der hier eingestellten Minuten wechelt das jeweilige Device von "arrival" auf "home" sofern es noch die location "arrival" hat.<br>
Werte: 0 bis 5999.9<br>
Standardwert: 0

====HomeAutoAsleep====
Ist hier ein Wert größer 0 angegeben, so wird beim Schlafengehen (gotosleep) jedes ROOMMATE/GUEST ein Timer gestartet der den jeweiligen ROOMMATE/GUEST nach der hier angegeben Zeit in Minuten auf "asleep" setzt.<br>
Werte: 0 bis 5999.9<br>
Standardwert: 0

====HomeAutoAwoken====
Ist hier ein Wert größer 0 angegeben, so wird beim Erwachen ("awoken" oder "home nach asleep") jedes ROOMMATE/GUEST dieser auf "awoken" gesetzt und ein Timer gestartet der den jeweiligen ROOMMATE/GUEST nach der hier angegeben Zeit in Minuten auf "home" setzt.<br>
Werte: 0 bis 5999.9<br>
Standardwert: 0

====HomeAutoDaytime====
Standardmäßig wird mode anhand der Tageszeit automatisch gesetzt. Ist das nicht gewünscht kann das über den Wert 0 deaktiviert werden. Dann stehen allerdings tageszeitabhängigen mode(s) nicht mehr zur Verfügung.<br>
Werte: 0 oder 1<br>
Standardwert: 1

====HomeResidentCmdDelay====
Normalerweise werden die Events der ROOMMATE/GUEST vor denen des HOMEMODE Device ausgeführt, um das zu ändern wird die Ausführung der ROOMMATE/GUEST HomeCMD Attribute um die hier eingestellte Zeit in Sekunden verzögert.<br>
Je genauer der Name des jeweiligen HomeCMD Attributs beschrieben wird, desto später wird dieser ausgeführt.<br>
Das heißt z.B. dass HomeCMDmode vor HomeCMDmode-absent und dieser wiederrum vor HomeCMDmode-absent-ROOMMATE/GUEST-NAME ausgeführt wird usw.<br>
Um das normale Verhalten wiederherzustellen ist der Wert dieses Attributs auf 0 zu setzen. Dann wird HomeCMDmode-absent-ROOMMATE/GUEST-NAME vor HomeCMDmode-absent und vor HomeCMDmode ausgeführt.<br>
Werte: 0 bis unendlich in Sekunden<br>
Standardwert: 1

==Konfiguration Presence Devices (automatische anwesend/abwesend Umschaltung von ROOMMATE/GUEST)==
Damit die automatische Zuordnung der Presence Devices zu ihren ROOMMATE/GUEST Devices zuverlässig funktioniert, ist es nötig dass der Hauptteil des Namens des ROOMMATE/GUEST innerhalb des Namens des zugehörigen PRESENCE Device(s) vorkommt.<br>
Im Attribut HomePresenceDeviceType kann man den zu suchenden TYPE von Presence Device vorgeben.<br>
Per Default werden nur Devices vom TYPE PRESENCE gesucht und versucht den ROOMMATE/GUEST zuzuweisen.<br>
Falls man z.B. auch Devices vom TYPE dummy zur Anwesenheitssteuerung benutzt, kann man diese im Attribut HomePresenceDeviceType mit hinzunehmen. Es sind alles Device TYPEn möglich die ein "presence" Reading mit den Werten "present/appeared" und "absent/disappeared" bereitstellen. Mehrere TYPEn sind möglich da in diesem Attribut ein Regex erwartet wird. z.B.: dummy oder PRESENCE|dummy oder PRESENCE|dummy|ONKYO_AVR.

===Beispiel===
Der Device Name meines ROOMMATE ist "rr_Dan".<br>
Auf der Suche nach dem zugehörigen Presence Device wird der erste Teil (rr_ oder rg_) weggeschnitten und der Rest in Kleinbuchstaben umgewandelt.<br>
Mit dem was übrig bleibt, bei mir also nur dan, werden die möglichen Presence Devices versucht zu erkennen.<br>
Mein zugehöriges Presence Device heißt, historisch gewachsen, PRESENCE_rr_Dan und würde somit problemlos zugeordnet werden können.<br>
Die Namen der zugehörigen Presence Devives könnten in ihrer kürzesten Form auch wie folgt sein um meinen ROOMMATE/GUEST Device zugeordnet zu werden:<br>
 pdan
 danp
 ZDan
 DANZ
 wenndannsonst
Aber Achtung, es funktioniert nicht mehr wenn die Namen nicht eindeutig sind. Wenn es z.B. eine rr_Dana geben würde mit Presence Device Name "pdani", dann würde dieser Name auch bei mir (dan) passen. Das könnte man aber auch bewußt nutzen um mit einem Presence Device 2 ROOMMATE/GUEST Devices gleichzeitig zu steuern.<br>
Wenn die Namen wirklich absolut eindeutig sind, dann könnte man den Regex im Attribut HomePresenceDeviceType sogar auf ".*" setzen.

Werden pro ROOMMATE/GUEST mehrere Presence Devices gefunden und zugeordnet, so wird automatisch dass Attribut HomePresenceDeviceAbsentCount-<NAME-ROOMMATE/GUEST> auf die Anzahl der gefundenen Presence Devices gesetzt, so dass der/die jeweilige ROOMMATE/GUEST immer erst als abwesend gewertet wird sobald alle zugehörigen Presence Devices abwesend sind. Analog dazu gibt es noch das Attribut HomePresenceDevicePresentCount-<NAME-ROOMMATE/GUEST>.

===Attribute===

====HomeAutoPresence====
Ist dieses Attribut auf 1 gesetzt, so werden die ROOMMATE/GUEST Devices automatisch zum Status ihrer zugehörigen PRESENCE Devices geschaltet.<br>
PRESENCE Device present - ROOMMATE/GUEST home<br>
PRESENCE Device absent - ROOMMATE/GUEST absent<br>
Falls es sich bei den von Euch benutzen PRESENCE Devices nicht um Devices vom TYPE PRESENCE handeln sollte, sondern z.B. um PRESENCE und dummy, so kann dieses im Attribut HomePresenceDeviceType als Regex konfiguriert werden! z.B.: PRESENCE|dummy<br>
Damit ein Device als Presence Device erkannt werden kann, muss dieses über ein presence Reading verfügen.<br>
Werte: 0 oder 1<br>
Standardwert: 0

====HomePresenceDeviceType====
Regex des TYPEs/der TYPEn von Presence Devices<br>
Werte: Regex der Device TYPEn<br>
Standardwert: PRESENCE

==Erweiterte Konfiguration==
Um das HOMEMODE Device vollumfänglich zu benutzen ist es sinnvoll weitere Devices (zur Überwachung) hinzuzufügen.

Die bereits möglichen hinzuzufügenden Devices werden hier folgend nach Attributnamen erklärt.

===Attribute===

====HomeEventsHolidayDevices====
Hier ist ein Devspec von holiday Device(s) anzugeben.<br>
''Es wird empfohlen die holiday Dateien in Großbuchstaben anzulegen, da dann die daraus resultierenden Platzhalter ebenfalls Großbuchstaben sind und somit zu den anderen Platzhaltern passen.''
Es werden alle Typen von holiday Events (1,2,3,4,5) unterstützt. Der jeweilige Event Text kann auch Leerzeichen enthalten, welche in den HomeCMD Attributen durch Bindestriche (-) ersetzt werden.<br>
Diese Devices stellen zusätzlich die Platzhalter %CALENDAR%, %EVENT% und %PREVEVENT% in den HomeCMDevent Attributen zur Verfügung. %CALENDAR% wird dann durch den Namen, %EVENT% durch das aktuelle Event und %PREVEVENT% durch das vorherige Event des jeweiligen Kalenders ersetzt.<br>
Werte: frei wählbar<br>
Werteformat: Devspec<br>
Standardwert:

====HomeIcewarningOnOffTemps====
2 leerzeichenseparierte Temperaturen für das Ein- und Ausschalten der Eiswarnung.<br>
Werte: frei wählbar<br>
Werteformat: zwei leerzeichenseparierte Temperaturen mit maximal einer Kommastelle<br>
Standardwert: 2 3

====HomeSensorHumidityOutside====
Hier ist der Name des (Haupt)Aussensensors für Luftfeuchtigkeit anzugeben. Dieser muss ein Reading humidity besitzen.<br>
Falls der Sensor für (Aussen)Luftfeuchtigkeit und Aussentemperatur ein und der selbe ist, so muss dieser nur einmalig im Attribut HomeSensorTemperatureOutside hinterlegt werden. Dieser muss dann die beiden Readings humidity und temperature haben. Im Bedarfsfall können diese Readings auch vorher entsprechend durch eigene userReadings erstellt werden.<br>
Dieser Sensor stellt den Platzhalter %HUMIDITY% für den Wert des Readings humidity zur Verfügung.<br>
Werte: frei wählbar<br>
Werteformat: Device Name mit Reading humidity<br>
Standardwert:

====HomeSensorTemperatureOutside====
Hier ist der Name des (Haupt)Aussentemperatursensors anzugeben. Dieser muss mindestens ein Reading temperature besitzen.<br>
Falls der Sensor für Aussentemperatur auch ein Reading humidity besitzen sollte und dieses auch der Sensor für die Aussenlufteuchtigkeit ist, so muss dieser nur einmalig hier in diesem Attribut hinterlegt werden.<br>
Dieser Sensor stellt den Platzhalter %TEMPERATURE% für den Wert des Readings temperature zur Verfügung.<br>
Werte: frei wählbar<br>
Werteformat: Device Name mit Reading temperature und optional humidity<br>
Standardwert:

====HomeSensorsContact====
Hier können alle Kontakt Sensoren als Devspec hinterlegt werden.<br>
Diese Devices stellen zusätzlich die Platzhalter %ALIAS%, %SENSOR% und %STATE% in den HomeCMDcontact Attributen zur Verfügung. %ALIAS% wird dann durch den Alias, %SENSOR% durch den Namen und %STATE% durch den aktuellen state des zuletzt ausgelösten Kontakts ersetzt.<br>
Werte: frei wählbar<br>
Werteformat: Devspec<br>
Standardwert:<br>
''In meinem Falle sind das optische und magnetische Kontaktsensoren vom HomeMatic. HM-SEC-SCo und HM-SEC-SC-2.<br>
Darum ist bei mir als Devspec [b]model=HM-SEC-SC(o|-2)[/b] eingetragen um alle diese Kontaktsensoren zu erfassen.''<br>
Nach Übernehmen des Attributs werden alle gefundenen Kontaktsensoren mit ihren Namen im Internal SENSORSCONTACT des HOMEMODE Device einzeln aufgelistet und können dort auch direkt angeklickt werden.<br>
Des weiteren werden beim Übernehmen dieses Attributs jedem Kontaktsensor folgende Attribute im Attribut userattr hinzugefügt:<br>

=====HomeContactType=====
Typ des Kontakts - wird versucht anhand des Namen/Alias beim Hinzufügen zum HOMEMODE Device zu ermitteln, sollte jedoch für jeden Kontaktsensor einzeln überprüft werden<br>
Werte: doorinside,dooroutside,doormain,window<br>
Werteformat: vorgegebene Werteauswahl<br>
Standardwert: window

=====HomeModeAlarmActive=====
Regex der Alarm Mode(s) in denen der Kontaktsensor eine erfolgte Öffnung als Alarm melden soll.<br>
Werte: armaway|armhome|armnight<br>
Werteformat: Regex von Alarm Modes<br>
Standardwert: armaway

=====HomeOpenDontTriggerModes=====
Regex der Mode(s) des HOMEMODE Device in denen keine Offen Warnungen erfolgen sollen.<br>
Ist ein Kontakt geöffnet während die hier eingestellten Mode(s) eintreten, so wird der noch bestehende Timer abgebrochen. Entgegengesetzt startet er wieder sobal die hier eingestellten Mode(s) verlassen werden.<br>
Ist hier z.B. "gotosleep|asleep" eingestellt, so kann man z.B. das Fenster schon vor dem Auslösen von gotosleep oder asleep öffnen und der bestehende Offenwarnung-Timer wird dann abgebrochen. Sobald man am Morgen z.B. awoken oder home auslöst, so wird ein neuer Timer gestartet der einen dann an das noch offene Fenster erinnert.<br>
Werte: alle Modes des HOMEMODE Device<br>
Werteformat: Regex von Modes<br>
Standardwert:

=====HomeOpenDontTriggerModesResidents=====
Devspec der ROOMMATE/GUEST Devices deren Status statt der Modes des HOMEMODE Device für Attribut HomeOpenDontTriggerModes benutzt werden soll.<br>
Werte: alle überwachten ROOMMATE/GUEST<br>
Werteformat: Devspec<br>
Standardwert:

=====HomeOpenMaxTrigger=====
Maximale Anzahl an Warnmeldungen<br>
Werte: 0 bis ~<br>
Werteformat: ganze Zahl<br>
Standardwert:

=====HomeOpenTimes=====
Leerzeichenseparierte Liste von Offen Warnung Zeiten in Minuten.<br>
Der erste Wert entspricht der ersten Zeit, der zweite Wert der zweiten Zeit usw.<br>
Die Anzahl sollte dem Wert im Attribut HomeOpenMaxTrigger entsprechen. Wenn hier weniger Zeiten vorgegeben werden, so wird für weitere Offen Warnungen immer die letzte hier angegebene Zeit verwendet.<br>
Werte: frei wählbar<br>
Werteformat: leerzeichenseparierte Liste von Zahlen mit einer Kommmastelle, z.B. 2.5<br>
Standardwert: 10

=====HomeOpenTimesDividers=====
Leerzeichenseparierte Liste von 3 Offenwarnzeit Teilern.<br>
Der erste Wert ist für Herbst (autumn), der zweite Wert für Winter (winter) und der dritte Wert für Frühling (spring). Im Sommer wird immer die normale Zeit (Teiler 1) verwendet.<br>
Bei einer normalen Offenwarnzeit von 10 Minuten und den hier anzugebenen Teilern z.B. "2 3 2" ergeben sich für Herbst und Frühling Offenwarnzeiten von jeweils 5 Minuten und im Winter 3.3 Minuten.<br>
Die hier eingetragenen Werte überschreiben die Werte aus dem Attribut HomeSensorsContactOpenTimeDividers des HOMEMODE Device.<br>
Werte: frei wählbar<br>
Werteformat: leerzeichenseparierte Liste von Zahlen mit einer Kommmastelle, z.B. 2 2.5 2<br>
Standardwert: 1 1 1

=====HomeReadings=====
Zwei leerzeichenseparierte Readings für open und sabotage Status.<br>
Die hier eingetragenen Readings überschreiben die Werte aus dem Attribut HomeSensorsContactReadings des HOMEMODE Device.<br>
Werte: frei wählbar<br>
Werteformat: zwei Wörter<br>
Standardwert: state sabotageError

=====HomeValues=====
Regex der Werte die für offen und sabotiert stehen.<br>
Die hier eingetragenen Werte überschreiben die Werte aus dem Attribut HomeSensorsContactValues des HOMEMODE Device.<br>
Werte: frei wählbar<br>
Werteformat: Regex<br>
Standardwert: open|tilted|on

====HomeSensorsContactReadings====
Zwei leerzeichenseparierte Readings für open und sabotage Status.<br>
Die hier eingetragenen Readings sind global für alle Kontaktsensoren, können aber durch setzen des Attributs HomeReadings in jedem Sensor überschrieben werden.<br>
Werte: frei wählbar<br>
Werteformat: zwei Wörter<br>
Standardwert: state sabotageError

====HomeSensorsContactValues====
Regex der Werte die für offen und sabotiert stehen.<br>
Die hier eingetragenen Werte sind global für alle Kontaktsensoren, können aber durch setzen des Attributs HomeValues in jedem Sensor überschrieben werden.<br>
Werte: frei wählbar<br>
Werteformat: Regex<br>
Standardwert: open|tilted|on

====HomeSensorsContactOpenTimeDividers====
Leerzeichenseparierte Liste von 3 Offenwarnzeit Teilern.<br>
Der erste Wert ist für Herbst (autumn), der zweite Wert für Winter (winter) und der dritte Wert für Frühling (spring). Im Sommer wird immer die normale Zeit (Teiler 1) verwendet.<br>
Bei einer normalen Offenwarnzeit von 10 Minuten und den hier anzugebenen Teilern z.B. "2 3 2" ergeben sich für Herbst und Frühling Offenwarnzeiten von jeweils 5 Minuten und im Winter 3.3 Minuten.<br>
Die hier eingetragenen Werte sind global für alle Kontaktsensoren, können aber durch setzen des Attributs HomeOpenTimesDividers in jedem Sensor überschrieben werden.<br>
Werte: frei wählbar<br>
Werteformat: leerzeichenseparierte Liste von 3 Zahlen mit max. einer Kommmastelle, z.B. 2 2.5 2<br>
Standardwert: 1 1 1

====HomeSensorsContactOpenTimeMin====
Minimale Zeit in Minuten die mindestens für eine Offenwarnung gewartet werden soll - im Falle dass sich durch den Teiler evtl. zu kleine Werte ergeben.<br>
Werte: frei wählbar<br>
Werteformat: eine Zahle mit max. einer Kommmastelle, z.B. 2.5<br>
Standardwert:

====HomeSensorsContactOpenTimes====
Leerzeichenseparierte Liste von Offen Warnung Zeiten in Minuten.<br>
Der erste Wert entspricht der ersten Zeit, der zweite Wert der zweiten Zeit usw.<br>
Die Anzahl sollte dem Wert im Attribut HomeOpenMaxTrigger entsprechen. Wenn hier weniger Zeiten vorgegeben werden, so wird für weitere Offen Warnungen immer die letzte hier angegebene Zeit verwendet.<br>
Werte: frei wählbar<br>
Werteformat: leerzeichenseparierte Liste von Zahlen mit max. einer Kommmastelle, z.B. 7.5<br>
Standardwert: 10

====HomeSensorsMotion====
Hier können alle Bewegungs Sensoren als Devspec hinterlegt werden.<br>
Diese Devices stellen zusätzlich die Platzhalter %ALIAS%, %SENSOR% und %STATE% in den HomeCMDmotion Attributen zur Verfügung. %ALIAS% wird dann durch den Alias, %SENSOR% durch den Namen und %STATE% durch den aktuellen state des zuletzt ausgelösten Kontakts ersetzt.<br>
Werte: frei wählbar<br>
Werteformat: Devspec<br>
Standardwert:

''In meinem Falle sind das Fibaro Motion Sensor Gen4/5.''<br>
''Darum ist bei mir als Devspec '''modelId=010f-0801-1001|010f-0800-1001''' eingetragen um alle diese Bewegungssensoren zu erfassen.<br>
Damit bei den Gen5 Sensoren auch das open im reading state steht, habe ich mir bei diesen Sensoren ein userReading angelegt.''<br>
Nach Übernehmen des Attributs werden alle gefundenen Bewegungssensoren mit ihren Namen im Internal SENSORSMOTION des HOMEMODE Device einzeln aufgelistet und können dort auch direkt angeklickt werden.<br>
Des weiteren werden beim Übernehmen dieses Attributs jedem Bewegungssensor folgende Attribute im Attribut userattr hinzugefügt:

=====HomeModeAlarmActive=====
Regex der Alarm Mode(s) in denen der Bewegungssensor eine erfolgte Öffnung als Alarm melden soll.<br>
Werte: armaway|armhome|armnight<br>
Werteformat: Regex von Alarm Modes<br>
Standardwert: armaway

=====HomeReadings=====
2 leerzeichenseparierte Readings für open und sabotage.<br>
Die hier eingetragenen Readings überschreiben die Werte aus dem Attribut HomeSensorsMotionReadings des HOMEMODE Device.<br>
Werte: frei wählbar<br>
Werteformat: zwei Wörter<br>
Standardwert: state sabotageError

=====HomeValues=====
Regex der Werte die für offen und sabotiert stehen.<br>
Die hier eingetragenen Werte überschreiben die Werte aus dem Attribut HomeSensorsMotionValues des HOMEMODE Device.<br>
Werte: frei wählbar<br>
Werteformat: Regex<br>
Standardwert: open|on

=====HomeSensorLocation=====
Standort des Bewegungssensors (außen oder innen) - wird standardmäßig beim Hinzufügen zum HOMEMODE Device auf "inside" gesetzt, sollte jedoch für jeden Kontaktsensor einzeln überprüft werden<br>
Werte: inside,outside<br>
Werteformat: vorgegebene Werteauswahl<br>
Standardwert: inside

====HomeSensorsMotionReadings====
2 leerzeichenseparierte Readings für open und sabotage.<br>
Die hier eingetragenen Readings sind global für alle Kontaktsensoren, können aber durch setzen des Attributs HomeReadings in jedem Sensor überschrieben werden.<br>
Werte: frei wählbar<br>
Werteformat: zwei Wörter<br>
Standardwert: state sabotageError

====HomeSensorsMotionValues====
Regex der Werte die für offen und sabotiert stehen.<br>
Die hier eingetragenen Werte sind global für alle Kontaktsensoren, können aber durch setzen des Attributs HomeValues in jedem Sensor überschrieben werden.<br>
Werte: frei wählbar<br>
Werteformat: Regex<br>
Standardwert: open|on

====HomeSensorsPowerEnergy====
Hier können alle Energie Sensoren als Devspec hinterlegt werden. Diese müssen die beiden Readings power und energy besitzen.<br>
Anhand dieser Readings wird dann der Gesamtverbrauch und die derzeitige gesamte Leistungsaufnahme berechnet.<br>
''In meinem Falle sind das Fibaro Wall Plugs Gen4/5.''<br>
''Darum ist bei mir als Devspec '''modelId=010f-0600-1000|010f-0602-1001''' eingetragen um alle diese Energie Sensoren zu erfassen.''<br>
Werte: frei wählbar<br>
Werteformat: Devspec mit vorhandenen energy und power Readings<br>
Standardwert:

====HomeSpecialLocation====
Hier können eigene zusätzliche location(s) als kommaseparierte Liste angegeben werden.<br>
Diese können dann über "set <HOMEMODE> location <LOCATION>" gesetzt werden. Dazu passend werden HomeCMD Attribute erstellt.<br>
Werte: frei wählbar<br>
Werteformat: kommaseparierte Liste von Wörtern<br>
Standardwert:

====HomeSpecialModes====
Hier können eigene zusätzliche mode(s) als kommaseparierte Liste angegeben werden.<br>
Diese können dann über "set <HOMEMODE> mode <MODE>" gesetzt werden. Dazu passend werden HomeCMD Attribute erstellt.<br>
Werte: frei wählbar<br>
Werteformat: kommaseparierte Liste von Wörtern<br>
Standardwert:

====HomeDaytimes====
Eigene Tageszeiten als Paare aus Zeit|Wort<br>
Werte: Zeit|Wort Paare separiert mit Leerzeichen<br>
Werteformat: Zeit|Wort<br>
Standardwert: 05:00|morning 10:00|day 14:00|afternoon 18:00|evening 23:00|night

====HomeSeasons====
Eigene Jahreszeiten als Paare aus Datum|Wort<br>
Werte: Datum|Wort Paare separiert mit Leerzeichen<br>
Werteformat: Datum|Wort<br>
Standardwert: 03.01|spring 06.01|summer 09.01|autumn 12.01|winter


===HomeText Attribute===
Die HomeText Attribute sind größtenteils zur Übersetzung einiger benötigter Begriffe gedacht.<br>
In den speziellen Attributen die mit HomeTextWeather anfangen, sind ganze Texte mit entsprechenden Platzhaltern einzufügen.

====HomeTextAndAreIs====
Übersetzung für "and", "are" und "is"<br>
Werte: frei wählbar separiert mit |<br>
Werteformat: Wort/Wörter<br>
Standardwert: and|are|is

====HomeTextClosedOpen====
Übersetzung für "closed" und "open"<br>
Werte: frei wählbar separiert mit |<br>
Werteformat: Wort<br>
Standardwert: closed|open

====HomeTextTodayTomorrowAfterTomorrow====
Übersetzung für "today", "tomorrow" und "day after tomorrow"<br>
Werte: frei wählbar separiert mit |<br>
Werteformat: Wort<br>
Standardwert: today|tomorrow|day after tomorrow

====HomeTextWeatherNoForecast====
Übersetzung für "No forecast available" - Text wenn keine Wettervorhersage verfügbar ist<br>
'''Beispiel:'''
 Es ist leider keine Wettervorhersage für den angegebenen Tag verfügbar!
Werte: frei wählbar<br>
Werteformat: Text<br>
Standardwert: No forecast available

====HomeTextWeatherForecastInSpecDays====
Text mit Platzhaltern für Wettervorhersage in 4-10 Tagen<br>
spezielle Platzhalter die nur in diesem Attribut gültig sind: %CONDITION%, %DAY%, %HIGH% und %LOW%<br>
'''Beispiel:'''
 In %DAY% Tagen %CONDITION% bei Temperaturen von %LOW% bis %HIGH%°C.
Werte: frei wählbar<br>
Werteformat: Text mit Platzhaltern<br>
Standardwert:

====HomeTextWeatherForecastToday====
Text mit Platzhaltern für Wettervorhersage für heute<br>
spezielle Platzhalter die nur in diesem Attribut gültig sind: %CONDITION%, %DAY%, %HIGH% und %LOW%<br>
'''Beispiel:'''
 %DAY% %CONDITION% bei Temperaturen von %LOW% bis %HIGH%°C. Aktuelle Temperatur %TEMPERATURE%°C bei einer Luftfeuchtigkeit von %HUMIDITY%%. Die gefühlte Temperatur ist %WINDCHILL%°C bei einer Windgeschwindigkeit von %WIND%km/h.
Werte: frei wählbar<br>
Werteformat: Text mit Platzhaltern<br>
Standardwert:

====HomeTextWeatherForecastTomorrow====
Text mit Platzhaltern für Wettervorhersage für morgen/übermorgen<br>
spezielle Platzhalter die nur in diesem Attribut gültig sind: %CONDITION%, %DAY%, %HIGH% und %LOW%<br>
'''Beispiel:'''
 %DAY% %CONDITION% bei Temperaturen von %LOW% bis %HIGH%°C.
Werte: frei wählbar<br>
Werteformat: Text mit Platzhaltern<br>
Standardwert:

====HomeTextWeatherLong====
Langer Text mit Platzhaltern für aktuelle Wetterdaten<br>
'''Beispiel:'''
 Es %TOBE% %CONDITION% bei %TEMPERATURE%°C und %HUMIDITY%% Luftfeuchtigkeit. Die gefühlte Temperatur ist %WINDCHILL%°C bei einer Windgeschwindigkeit von %WIND%km/h. Der Luftdruck ist %PRESSURETREND% bei %PRESSURE%hPa.
Werte: frei wählbar<br>
Werteformat: Text mit Platzhaltern<br>
Standardwert:

====HomeTextWeatherShort====
Kurzer Text mit Platzhaltern für aktuelle Wetterdaten<br>
'''Beispiel:'''
 %CONDITION%, %TEMPERATURE%°C, %HUMIDITY%% Luftfeuchtigkeit, Luftdruck %PRESSURE%hPa
Werte: frei wählbar<br>
Werteformat: Text mit Platzhaltern<br>
Standardwert:

====HomeTwilightDevice====
Hier ist der Name des lokalen Twilight Device anzugeben.<br>
Diese Device stellt zusätzlich die Platzhalter %LIGHT%, %TWILIGHT% und %TWILIGHTEVENT% in den HomeCMD Attributen zur Verfügung. %LIGHT% wird dann durch das Reading light, %TWILIGHT% durch das Reading twilight und %TWILIGHTEVENT% durch das aktuelle Twilight Event ersetzt.<br>
Werte: frei wählbar<br>
Werteformat: Devspec<br>
Standardwert:

====HomeYahooWeatherDevice====
Hier ist der Name des lokalen Yahoo Weather Device anzugeben.<br>
Diese Device stellt zusätzlich einige Platzhalter zur Verfügung. Für die genaue Beschreibung derer siehe "Platzhalter".<br>
Werte: frei wählbar<br>
Werteformat: Devspec<br>
Standardwert:

Ein weiterer Teil der Konfiguration ist das Befüllen der HomeCMD Attribute. Da dieses durch die Vermischung von FHEM Code, Perl Code und zusätzlichen Platzhaltern erst einmal sehr befremdlich sein kann, habe ich bei der Beschreibung der HomeCMD Attribute teilweise Beispiele hinzugefügt um den Einstieg weiter zu erleichtern.

==HomeCMD Attribute (mit Beispielen)==
Die HomeCMD Attribute sind zum Festlegen der jeweiligen Schaltaktionen gedacht und können damit evtl. vorhandene notify/DOIF ablösen. Sie können mit FHEM-Code, Perl-Code oder aber auch mit beidem vermischt befüllt werden (wovon ich allerdings abrate). Zusätzlich sind noch diverse Platzhalter (siehe Platzhalter) verfügbar.

'''Bei Perl-Code innerhalb der HomeCMD Attribute gibt es hier Besonderheiten.'''<br>
*Im Gegensatz zur FHEM-Eingabezeile müssen hier keine Semikolon verdoppelt werden
*Kommetarzeilen sind zulässig
*Kommentare am Ende einer Perl-Zeile sind nicht zulässig

Typischer Weise werden in den HomeCMD Attributen weitere Module angesprochen.<br>
Z.B. benutze ich für jegliche Form der Benachrichtigung den msg Befehl.

Keines der HomeCMD Attribute hat einen Standardwert. Es müssen alle Befehle selbst programmiert werden.

Platzhalter die Text(e) (string) beinhalten, müssen im Perl-Code in Anführungszeichen gesetzt werden (Beispiel %SENSOR%).<br>
Platzhalter die Zahlen beinhalten (int,float) sollten nicht in Anführungszeichen gesetzt werden damit Zahlenvergleiche (mittels ==, <=, >=, >, <) funktionieren (Beispiel %LIGHT%, %ICE% oder %TEMPERATURE%).

====HomeCMDalarmSmoke====
Befehle die beim Anfang/Ende eines Rauchalarms ausgeführt werden sollen.<br>

====HomeCMDalarmSmoke-off====
Befehle die beim Ende eines Rauchalarms ausgeführt werden sollen.<br>
Auslöser: Ende Rauchalarm eines beliebigen (von HOMEMODE überwachten) Rauchmelders<br>
'''Beispiel:'''
 msg audio ENTWARNUNG: Alle Rauchalarme sind beendet!

====HomeCMDalarmSmoke-on====
Befehle die bei einem Rauchalarm ausgeführt werden sollen.<br>
Auslöser: Rauchalarm eines beliebigen (von HOMEMODE überwachten) Rauchmelders<br>
'''Beispiel:'''
 {
   my $t = "%SMOKEHR%";
   my $s = "meldet";
   $s = "melden" if ($t =~ /und/);
   fhem "msg push ACHTUNG: $t $s Rauchalarm!";
 }

====HomeCMDalarmTampered====
Befehle die beim Anfang/Ende eines Sabotage Alarms ausgeführt werden sollen.<br>

====HomeCMDalarmTampered-off====
Befehle die beim Ende eines Sabotage Alarms ausgeführt werden sollen.<br>
Auslöser: Ende Sabotage Alarm eines beliebigen (von HOMEMODE überwachten) Kontakt-/Bewegungs-Sensors<br>
'''Beispiel:'''
 msg audio ENTWARNUNG: Alle Manipulationen wurden beseitigt!

====HomeCMDalarmTampered-on====
Befehle die bei einem Sabotage Alarm ausgeführt werden sollen.<br>
Auslöser: Sabotage Alarm eines beliebigen (von HOMEMODE überwachten) Kontakt-/Bewegungs-Sensors<br>
'''Beispiel:'''
 {
   my $t = "%TAMPERED%";
   my $s = "ist";
   $s = "sind" if ($t =~ /und/);
   fhem "msg audio ACHTUNG: $t $s sabotiert!";
 }

==Platzhalter==
